################################################################################
# SPDX-FileCopyrightText: Copyright (c) 2019-2021 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
################################################################################

Prequisites:
- DeepStreamSDK 6.0.1
- Python 3.6
- Gst-python

To run the test app:
  $ python3 deepstream_test_2.py <h264_elementary_stream> <0/1>

To get the past-frame tracking meta use 1, otherwise 0, this argument is optional.

This document shall describe about the sample deepstream-test2 application.

It is meant for simple demonstration of how to use the various DeepStream SDK
elements in the pipeline and extract meaningful insights from a video stream.

This sample creates multiple instances of "nvinfer" element. Each instance of
the "nvinfer" uses TensorRT API to infer on frames/objects. Every
instance is configured through its respective config file. Using a correct
configuration for a nvinfer element instance is therefore very important as
considerable behaviors of the instance are parameterized through these configs.

For reference, here are the config files used for this sample :
1. The 4-class detector (referred to as pgie in this sample) uses
    dstest2_pgie_config.txt
2. The vehicle color classifier (referred to as sgie1 in this sample) uses
    dstest2_sgie1_config.txt
3. The vehicle make classifier (referred to as sgie2 in this sample) uses
    dstest2_sgie2_config.txt
4. The vehicle type classifier (referred to as sgie3 in this sample) uses
    dstest2_sgie3_config.txt
5. The tracker (referred to as nvtracker in this sample) uses
    dstest2_tracker_config.txt

To get the past-frame-tracking meta, the following changes have to be added to
the dstest2_tracker_config.txt. 

1. ll-lib-file=/opt/nvidia/deepstream/deepstream/lib/libnvds_nvdcf.so
2. ll-config-file=tracker_config.yml
3. enable-past-frame=1

In this sample, we first create one instance of "nvinfer", referred as the pgie.
This is our 4 class detector and it detects for "Vehicle , RoadSign, TwoWheeler,
Person". After this we link a "nvtracker" instance which tracks the objects
detected by the pgie. After this we create 3 more instances of "nvinfer"
referred to as sgie1, sgie2, sgie3 respectively.
Each of the nvinfer elements attach some MetaData to the buffer. By attaching
the probe function at the end of the pipeline, one can extract meaningful
information from these inferences. Please refer the "osd_sink_pad_buffer_probe"
function in the sample code. For details on the Metadata format, refer to the
file "gstnvdsmeta.h"
